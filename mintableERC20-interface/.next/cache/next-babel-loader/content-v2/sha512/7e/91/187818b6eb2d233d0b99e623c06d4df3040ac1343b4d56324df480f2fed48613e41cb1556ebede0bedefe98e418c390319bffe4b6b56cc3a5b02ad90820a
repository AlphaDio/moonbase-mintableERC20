{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/alberto/data/mintableERC20/mintableERC20-interface/components/bmr-page.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Button, Form, Message, Dropdown } from 'semantic-ui-react';\nimport tokenInstance from '../ethereum/feed';\n\nconst addresses = require('../ethereum/addresses');\n\nconst tokenNames = [{\n  key: 'Mercury',\n  text: 'Mercury',\n  value: 'mercury'\n}, {\n  key: 'Venus',\n  text: 'Venus',\n  value: 'venus'\n}, {\n  key: 'Earth',\n  text: 'Earth',\n  value: 'earth'\n}, {\n  key: 'Mars',\n  text: 'Mars',\n  value: 'mars'\n}, {\n  key: 'Jupiter',\n  text: 'Jupiter',\n  value: 'jupiter'\n}, {\n  key: 'Saturn',\n  text: 'Saturn',\n  value: 'saturn'\n}, {\n  key: 'Uranus',\n  text: 'Uranus',\n  value: 'uranus'\n}, {\n  key: 'Neptune',\n  text: 'Neptune',\n  value: 'neptune'\n}, {\n  key: 'Pluto',\n  text: 'Pluto',\n  token: 'pluto'\n}];\n\nclass Table extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: false,\n      value: '',\n      errorMessage: ''\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const contractInstance = tokenInstance(addresses[this.state.value]);\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        await contractInstance.mintToken();\n      } catch (err) {\n        this.setState({\n          loading: false,\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n      return;\n    });\n\n    _defineProperty(this, \"handleChange\", (e, {\n      value\n    }) => this.setState({\n      value\n    }));\n  }\n\n  // Nextjs uses this function to render this first server-side\n  static async getInitialProps() {\n    getValue();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mint Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Mint 100 tokens (limited to once per hour)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage,\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          placeholder: \"Select Token to Mint\",\n          fluid: true,\n          search: true,\n          selection: true,\n          options: tokenNames,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Message, {\n          error: true,\n          header: \"Oops!\",\n          content: this.state.errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          loading: this.state.loading,\n          primary: true,\n          children: \"Submit Tx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/alberto/data/mintableERC20/mintableERC20-interface/components/bmr-page.js"],"names":["React","Component","Button","Form","Message","Dropdown","tokenInstance","addresses","require","tokenNames","key","text","value","token","Table","loading","errorMessage","event","preventDefault","contractInstance","state","setState","mintToken","err","message","e","getInitialProps","getValue","render","onSubmit","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Form, Message, Dropdown } from 'semantic-ui-react';\nimport tokenInstance from '../ethereum/feed';\nconst addresses = require('../ethereum/addresses');\n\n\nconst tokenNames = [\n   {\n      key: 'Mercury',\n      text: 'Mercury',\n      value: 'mercury',\n   },\n   {\n      key: 'Venus',\n      text: 'Venus',\n      value: 'venus',\n   },\n   {\n      key: 'Earth',\n      text: 'Earth',\n      value: 'earth',\n   },\n   {\n      key: 'Mars',\n      text: 'Mars',\n      value: 'mars',\n   },\n   {\n      key: 'Jupiter',\n      text: 'Jupiter',\n      value: 'jupiter',\n   },\n   {\n      key: 'Saturn',\n      text: 'Saturn',\n      value: 'saturn',\n   },\n   {\n      key: 'Uranus',\n      text: 'Uranus',\n      value: 'uranus',\n   },\n   {\n      key: 'Neptune',\n      text: 'Neptune',\n      value: 'neptune',\n   },\n   {\n      key: 'Pluto',\n      text: 'Pluto',\n      token: 'pluto',\n   }\n];\nclass Table extends Component {\n   // Nextjs uses this function to render this first server-side\n   static async getInitialProps() {\n      getValue();\n   }\n\n   state = {\n      loading: false,\n      value: '',\n      errorMessage: '',\n   };\n\n\n   onSubmit = async (event) => {\n      event.preventDefault();\n      const contractInstance = tokenInstance(addresses[this.state.value]);\n      \n      this.setState({ loading: true, errorMessage: '' });\n      try {\n         await contractInstance.mintToken();\n      } catch (err) {\n         this.setState({\n            loading: false,\n            errorMessage: err.message,\n         });\n      }\n      this.setState({ loading: false });\n      return;\n   };\n\n   handleChange = (e, { value }) => this.setState({ value })\n\n   render() {\n      return (\n         <div>\n            <h3>Mint Tokens</h3>\n            <p>\n               Mint 100 tokens (limited to once per hour)\n            </p>\n            <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n               <Dropdown\n                  placeholder='Select Token to Mint'\n                  fluid\n                  search\n                  selection\n                  options={tokenNames}\n                  onChange={this.handleChange}\n               />\n               <br />\n               <Message\n                  error\n                  header='Oops!'\n                  content={this.state.errorMessage}\n               />\n               <Button type='submit' loading={this.state.loading} primary>\n                  Submit Tx\n               </Button>\n            </Form>\n            <br />\n         </div>\n      );\n   }\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}