{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Container, Button, Menu } from 'semantic-ui-react';\nimport Head from 'next/head';\nimport DataFeed from '../components/datafeed-page';\nimport BMR from '../components/bmr-page';\nimport { Link } from '../routes';\n\nclass MoonLink extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      account: 'Not Connected'\n    });\n\n    _defineProperty(this, \"onConnect\", async () => {\n      if (typeof ethereum === 'undefined') {\n        // MetaMask not detected\n        this.setState({\n          account: 'MetaMask not Detected'\n        });\n      } else {\n        // MetaMask detected - check network\n        if (ethereum.chainId !== '0x507') {\n          this.setState({\n            account: 'Only Moonbase Alpha Supported'\n          });\n        } else {\n          const accounts = await ethereum.request({\n            method: 'eth_requestAccounts'\n          }); // Set account to state\n\n          if (accounts) {\n            this.setState({\n              account: accounts[0]\n            });\n          }\n        }\n      }\n    });\n  }\n\n  // Nextjs uses this function to render this first server-side\n  static async getInitialProps() {\n    return {};\n  } // Initial State\n\n\n  async componentDidMount() {\n    // If already connected display account\n    if (typeof ethereum !== 'undefined' && ethereum.selectedAddress !== null) {\n      this.setState({\n        account: ethereum.selectedAddress\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(Container, {\n      children: [/*#__PURE__*/_jsxs(Head, {\n        children: [/*#__PURE__*/_jsx(\"title\", {\n          children: \"Moonlink Dashboard\"\n        }), /*#__PURE__*/_jsx(\"link\", {\n          rel: \"icon\",\n          type: \"image/png\",\n          sizes: \"32x32\",\n          href: \"/favicon.png\"\n        }), /*#__PURE__*/_jsx(\"link\", {\n          rel: \"stylesheet\",\n          href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\n        })]\n      }), /*#__PURE__*/_jsxs(Menu, {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsx(Link, {\n          route: \"/\",\n          children: /*#__PURE__*/_jsx(\"a\", {\n            className: \"item\",\n            children: \"Moonbase Alpha ERC20 Faucet\"\n          })\n        }), /*#__PURE__*/_jsxs(Menu.Menu, {\n          position: \"right\",\n          children: [/*#__PURE__*/_jsxs(\"a\", {\n            className: \"item\",\n            children: [\" \", this.state.account, \" \"]\n          }), /*#__PURE__*/_jsx(Button, {\n            floated: \"right\",\n            content: \"Connect MetaMask\",\n            icon: \"plus square\",\n            primary: true,\n            onClick: this.onConnect\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(DataFeed, {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(BMR, {\n        account: this.state.account\n      }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(\"p\", {\n        children: [\"Don't judge the code :) as it is for demostration purposes only. You can check the source code \\xA0\", /*#__PURE__*/_jsx(\"a\", {\n          href: \"https://github.com/albertov19/moonlink-dashboard\",\n          children: \"here\"\n        })]\n      }), /*#__PURE__*/_jsx(\"br\", {})]\n    });\n  }\n\n}\n\nexport default ERC20Faucet;","map":null,"metadata":{},"sourceType":"module"}