{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/alberto/data/mintableERC20/mintableERC20-interface/pages/index.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Container, Button, Menu, Message } from 'semantic-ui-react';\nimport Head from 'next/head';\nimport DataFeed from '../components/datafeed-page'; //import BMR from '../components/bmr-page';\n\nimport { Link } from '../routes';\n\nclass ERC20Faucet extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      account: 'Not Connected'\n    });\n\n    _defineProperty(this, \"onConnect\", async () => {\n      if (typeof ethereum === 'undefined') {\n        // MetaMask not detected\n        this.setState({\n          account: 'MetaMask not Detected'\n        });\n      } else {\n        // MetaMask detected - check network\n        if (ethereum.chainId !== '0x507') {\n          this.setState({\n            account: 'Only Moonbase Alpha Supported'\n          });\n        } else {\n          const accounts = await ethereum.request({\n            method: 'eth_requestAccounts'\n          }); // Set account to state\n\n          if (accounts) {\n            this.setState({\n              account: accounts[0]\n            });\n          }\n        }\n      }\n    });\n  }\n\n  // Nextjs uses this function to render this first server-side\n  static async getInitialProps() {\n    return {};\n  } // Initial State\n\n\n  async componentDidMount() {\n    // If already connected display account\n    if (typeof ethereum !== 'undefined' && ethereum.selectedAddress !== null) {\n      this.setState({\n        account: ethereum.selectedAddress\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Moonlink Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"icon\",\n          type: \"image/png\",\n          sizes: \"32x32\",\n          href: \"/favicon.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"stylesheet\",\n          href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          route: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"item\",\n            children: \"Moonbase Alpha ERC20 Faucet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Menu, {\n          position: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"item\",\n            children: [\" \", this.state.account, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            floated: \"right\",\n            content: \"Connect MetaMask\",\n            icon: \"plus square\",\n            primary: true,\n            onClick: this.onConnect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DataFeed, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't judge the code :) as it is for demostration purposes only. You can check the source code \\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://github.com/albertov19/moonlink-dashboard\",\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default ERC20Faucet;","map":{"version":3,"sources":["/home/alberto/data/mintableERC20/mintableERC20-interface/pages/index.js"],"names":["React","Component","Container","Button","Menu","Message","Head","DataFeed","Link","ERC20Faucet","account","ethereum","setState","chainId","accounts","request","method","getInitialProps","componentDidMount","selectedAddress","render","marginTop","state","onConnect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Button, Menu, Message } from 'semantic-ui-react';\nimport Head from 'next/head';\nimport DataFeed from '../components/datafeed-page';\n//import BMR from '../components/bmr-page';\nimport { Link } from '../routes';\nclass ERC20Faucet extends Component {\n   // Nextjs uses this function to render this first server-side\n   static async getInitialProps() {\n      return {};\n   }\n\n   // Initial State\n   state = {\n      account: 'Not Connected',\n   };\n\n   async componentDidMount() {\n      // If already connected display account\n      if (\n         typeof ethereum !== 'undefined' &&\n         ethereum.selectedAddress !== null\n      ) {\n         this.setState({ account: ethereum.selectedAddress });\n      }\n   }\n\n   onConnect = async () => {\n      if (typeof ethereum === 'undefined') {\n         // MetaMask not detected\n         this.setState({ account: 'MetaMask not Detected' });\n      } else {\n         // MetaMask detected - check network\n         if (ethereum.chainId !== '0x507') {\n            this.setState({ account: 'Only Moonbase Alpha Supported' });\n         } else {\n            const accounts = await ethereum.request({\n               method: 'eth_requestAccounts',\n            });\n\n            // Set account to state\n            if (accounts) {\n               this.setState({ account: accounts[0] });\n            }\n         }\n      }\n   };\n\n   render() {\n      return (\n         <Container>\n            <Head>\n               <title>Moonlink Dashboard</title>\n               <link\n                  rel='icon'\n                  type='image/png'\n                  sizes='32x32'\n                  href='/favicon.png'\n               />\n               <link\n                  rel='stylesheet'\n                  href='//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css'\n               />\n            </Head>\n            <Menu style={{ marginTop: '10px' }}>\n               <Link route='/'>\n                  <a className='item'>Moonbase Alpha ERC20 Faucet</a>\n               </Link>\n               <Menu.Menu position='right'>\n                  <a className='item'> {this.state.account} </a>\n                  <Button\n                     floated='right'\n                     content='Connect MetaMask'\n                     icon='plus square'\n                     primary\n                     onClick={this.onConnect}\n                  />\n               </Menu.Menu>\n            </Menu>\n            <br />\n            <DataFeed />\n            <br />\n            <hr />\n            <br />\n            {/* <BMR account={this.state.account} /> */}\n            <br />\n            <p>\n               Don't judge the code :) as it is for demostration purposes only.\n               You can check the source code &nbsp;\n               <a href='https://github.com/albertov19/moonlink-dashboard'>\n                  here\n               </a>\n            </p>\n            <br />\n         </Container>\n      );\n   }\n}\n\nexport default ERC20Faucet;\n"]},"metadata":{},"sourceType":"module"}