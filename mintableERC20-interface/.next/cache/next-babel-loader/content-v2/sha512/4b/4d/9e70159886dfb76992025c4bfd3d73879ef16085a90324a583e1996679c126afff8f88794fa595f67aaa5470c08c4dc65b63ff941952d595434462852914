{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/alberto/data/mintableERC20/mintableERC20-interface/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/alberto/data/mintableERC20/mintableERC20-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/alberto/data/mintableERC20/mintableERC20-interface/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alberto/data/mintableERC20/mintableERC20-interface/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/alberto/data/mintableERC20/mintableERC20-interface/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/alberto/data/mintableERC20/mintableERC20-interface/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/alberto/data/mintableERC20/mintableERC20-interface/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alberto/data/mintableERC20/mintableERC20-interface/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/alberto/data/mintableERC20/mintableERC20-interface/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/alberto/data/mintableERC20/mintableERC20-interface/pages/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Container, Button, Menu, Message } from 'semantic-ui-react';\nimport Head from 'next/head';\nimport DataFeed from '../components/datafeed-page';\nimport Mint from '../components/mint-page';\nimport { Link } from '../routes';\n\nvar ERC20Faucet = /*#__PURE__*/function (_Component) {\n  _inherits(ERC20Faucet, _Component);\n\n  var _super = _createSuper(ERC20Faucet);\n\n  function ERC20Faucet() {\n    var _this;\n\n    _classCallCheck(this, ERC20Faucet);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      account: 'Not Connected',\n      errorMessage: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onConnect\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(typeof ethereum === 'undefined')) {\n                _context.next = 4;\n                break;\n              }\n\n              // MetaMask not detected\n              _this.setState({\n                account: 'MetaMask not Detected'\n              });\n\n              _context.next = 12;\n              break;\n\n            case 4:\n              if (!(ethereum.chainId !== '0x507')) {\n                _context.next = 8;\n                break;\n              }\n\n              _this.setState({\n                account: 'Only Moonbase Alpha Supported'\n              });\n\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.next = 10;\n              return ethereum.request({\n                method: 'eth_requestAccounts'\n              });\n\n            case 10:\n              accounts = _context.sent;\n\n              // Set account to state\n              if (accounts) {\n                _this.setState({\n                  account: accounts[0]\n                });\n              }\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    return _this;\n  }\n\n  _createClass(ERC20Faucet, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // If already connected display account\n                if (typeof ethereum !== 'undefined' && ethereum.selectedAddress !== null) {\n                  this.setState({\n                    account: ethereum.selectedAddress\n                  });\n                }\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Head, {\n          children: [/*#__PURE__*/_jsxDEV(\"title\", {\n            children: \"Moonlink Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n            rel: \"icon\",\n            type: \"image/png\",\n            sizes: \"32x32\",\n            href: \"/favicon.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n            rel: \"stylesheet\",\n            href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          style: {\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            route: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"item\",\n              children: \"Moonbase Alpha ERC20 Faucet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Menu, {\n            position: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"item\",\n              children: [\" \", this.state.account, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              floated: \"right\",\n              content: \"Connect MetaMask\",\n              icon: \"plus square\",\n              primary: true,\n              onClick: this.onConnect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DataFeed, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Mint, {\n          account: this.state.account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't judge the code :) as it is for demostration purposes only. You can check the source code \\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://github.com/albertov19/moonlink-dashboard\",\n            children: \"here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }, this);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    // Nextjs uses this function to render this first server-side\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", {});\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }() // Initial State\n\n  }]);\n\n  return ERC20Faucet;\n}(Component);\n\nexport default ERC20Faucet;","map":{"version":3,"sources":["/home/alberto/data/mintableERC20/mintableERC20-interface/pages/index.js"],"names":["React","Component","Container","Button","Menu","Message","Head","DataFeed","Mint","Link","ERC20Faucet","account","errorMessage","ethereum","setState","chainId","request","method","accounts","selectedAddress","marginTop","state","onConnect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Button, Menu, Message } from 'semantic-ui-react';\nimport Head from 'next/head';\nimport DataFeed from '../components/datafeed-page';\nimport Mint from '../components/mint-page';\nimport { Link } from '../routes';\nclass ERC20Faucet extends Component {\n   // Nextjs uses this function to render this first server-side\n   static async getInitialProps() {\n      return {};\n   }\n\n   // Initial State\n   state = {\n      account: 'Not Connected',\n      errorMessage: '',\n   };\n\n   async componentDidMount() {\n      // If already connected display account\n      if (\n         typeof ethereum !== 'undefined' &&\n         ethereum.selectedAddress !== null\n      ) {\n         this.setState({ account: ethereum.selectedAddress });\n      }\n   }\n\n   onConnect = async () => {\n      if (typeof ethereum === 'undefined') {\n         // MetaMask not detected\n         this.setState({ account: 'MetaMask not Detected' });\n      } else {\n         // MetaMask detected - check network\n         if (ethereum.chainId !== '0x507') {\n            this.setState({ account: 'Only Moonbase Alpha Supported' });\n         } else {\n            const accounts = await ethereum.request({\n               method: 'eth_requestAccounts',\n            });\n\n            // Set account to state\n            if (accounts) {\n               this.setState({ account: accounts[0] });\n            }\n         }\n      }\n   };\n\n   render() {\n      return (\n         <Container>\n            <Head>\n               <title>Moonlink Dashboard</title>\n               <link\n                  rel='icon'\n                  type='image/png'\n                  sizes='32x32'\n                  href='/favicon.png'\n               />\n               <link\n                  rel='stylesheet'\n                  href='//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css'\n               />\n            </Head>\n            <Menu style={{ marginTop: '10px' }}>\n               <Link route='/'>\n                  <a className='item'>Moonbase Alpha ERC20 Faucet</a>\n               </Link>\n               <Menu.Menu position='right'>\n                  <a className='item'> {this.state.account} </a>\n                  <Button\n                     floated='right'\n                     content='Connect MetaMask'\n                     icon='plus square'\n                     primary\n                     onClick={this.onConnect}\n                  />\n               </Menu.Menu>\n            </Menu>\n            <br />\n            <DataFeed />\n            <br />\n            <hr />\n            <br />\n            <Mint account={this.state.account} />\n            <br />\n            <p>\n               Don't judge the code :) as it is for demostration purposes only.\n               You can check the source code &nbsp;\n               <a href='https://github.com/albertov19/moonlink-dashboard'>\n                  here\n               </a>\n            </p>\n            <br />\n         </Container>\n      );\n   }\n}\n\nexport default ERC20Faucet;\n"]},"metadata":{},"sourceType":"module"}